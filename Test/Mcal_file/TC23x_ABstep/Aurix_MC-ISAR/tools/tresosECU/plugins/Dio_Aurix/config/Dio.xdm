<?xml version='1.0'?>
<!--
******************************************************************************
**                                                                           **
** Copyright (C) Infineon Technologies (2014)                                **
**                                                                           **
** All rights reserved.                                                      **
**                                                                           **
** This document contains proprietary information belonging to Infineon      **
** Technologies. Passing on and copying of this document, and communication  **
** of its contents is not permitted without prior written authorization.     **
**                                                                           **
*******************************************************************************
**                                                                           **
**  $FILENAME   : Dio.xdm $                                                  **
**                                                                           **
**  $CC VERSION : \main\49 $                                                 **
**                                                                           **
**  $DATE       : 2016-06-29 $                                               **
**                                                                           **
**  AUTHOR      : DL-AUTOSAR-Engineering                                     **
**                                                                           **
**  VENDOR      : Infineon Technologies                                      **
**                                                                           **
**  DESCRIPTION : This file contains                                         **
**                the Configuration description for DIO driver               **
**                                                                           **
**  MAY BE CHANGED BY USER [yes/no]: No                                      **
**                                                                           **
*******************************************************************************
**  TRACEABILITY :[cover parentID=DS_AS_DIO063,DS_AS_DIO053,DS_AS_DIO056,
                   SAS_AS_DIO141_Conf,SAS_AS_DIO143_Conf,SAS_AS40X_DIO153_Conf,
                   SAS_AS_DIO142_Conf,SAS_AS_DIO144_Conf,SAS_AS_DIO145_Conf,
                   SAS_AS_DIO146_Conf,SAS_AS_DIO147_Conf,SAS_AS_DIO148_Conf,
                   SAS_AS_DIO026_3_DIO149_Conf,SAS_AS_DIO150_Conf,
                   SAS_AS_DIO151_Conf,DS_NAS_DIO_PR647,DS_AS4XX_DIO_PR69_PR469,
                   DS_NAS_DIO_PR446,SAS_AS4XX_DIO_PR122_1,DS_NAS_DIO_PR655,
                   DS_NAS_DIO_PR723,SAS_AS40X_DIO152_Conf,DS_NAS_DIO_PR719,
                   DS_NAS_DIO_PR713,DS_NAS_DIO_PR714,SAS_AS40X_DIO_PR970,
                   DS_NAS_DIO_PR720,SAS_MCAL_DIO_0526,
                   DS_AS403_PR2848,SAS_MCAL_AS4XX_DIO_0527,
                   SAS_AS4XX_DIO_PR123, SAS_NAS_DIO_PR77,
                   SAS_NAS_DIO_PR725,SAS_NAS_DIO_PR726, SAS_NAS_ALL_PR1647,
                   SAS_NAS_ALL_PR470,SAS_NAS_ALL_PR471,SAS_NAS_DIO_PR621,
                   SAS_NAS_DIO_PR640,SAS_NAS_DIO_PR656,SAS_AS4XX_DIO_PR668,
                   SAS_NAS_DIO_PR227,SAS_NAS_DIO_PR60,SAS_NAS_DIO_PR64,
                   SAS_NAS_DIO_PR667,SAS_NAS_DIO_PR646,SAS_NAS_DIO_PR65,
                   DS_AS4XX_DIO_PR2848,SAS_AS4XX_DIO_PR122_2,
                   SAS_NAS_EP_DIO_PR3054_1,SAS_NAS_HE2_DIO_PR3054_1,
                   SAS_NAS4XX_EP_DIO_PR3054_2,SAS_NAS4XX_HE2_DIO_PR3054_2,
                   SAS_NAS_EP_DIO_PR3054_3,SAS_NAS_HE2_DIO_PR3054_3]         **
**                [/cover]                                                   **
*******************************************************************************
-->
<datamodel version="3.0"
           xmlns="http://www.tresos.de/_projects/DataModel2/08/root.xsd"
           xmlns:a="http://www.tresos.de/_projects/DataModel2/08/attribute.xsd"
           xmlns:v="http://www.tresos.de/_projects/DataModel2/06/schema.xsd"
           xmlns:d="http://www.tresos.de/_projects/DataModel2/06/data.xsd">

  <d:ctr type="AUTOSAR" factory="autosar"
         xmlns:ad="http://www.tresos.de/_projects/DataModel2/08/admindata.xsd"
         xmlns:icc="http://www.tresos.de/_projects/DataModel2/08/implconfigclass.xsd"
         xmlns:mt="http://www.tresos.de/_projects/DataModel2/11/multitest.xsd" >
    <d:lst type="TOP-LEVEL-PACKAGES">
      <d:ctr name="AURIX" type="AR-PACKAGE">
        <a:a name="UUID" value="a6d952b5-26cf-4b62-9736-4adf5600af0e"/>
        <d:lst type="ELEMENTS">
          <d:chc name="Dio" type="AR-ELEMENT" value="MODULE-DEF">
            <v:ctr type="MODULE-DEF">
              <a:a name="ADMIN-DATA" type="ADMIN-DATA">
                <ad:ADMIN-DATA>
                  <ad:DOC-REVISIONS>
                    <ad:DOC-REVISION>
                      <ad:REVISION-LABEL>4.2.0</ad:REVISION-LABEL>
                      <ad:ISSUED-BY>AUTOSAR</ad:ISSUED-BY>
                      <ad:DATE>2011-11-09</ad:DATE>
                    </ad:DOC-REVISION>
                  </ad:DOC-REVISIONS>
                </ad:ADMIN-DATA>
              </a:a>
              <a:a name="RELEASE" value="asc:4.0"/>
              <a:a name="UUID" value="54b6c231-c092-4390-93b2-8b2bd7168787"/>
              <d:ref type="REFINED_MODULE_DEF" value="ASPath:/AUTOSAR/EcucDefs/Dio"/>
              <v:var name="IMPLEMENTATION_CONFIG_VARIANT" type="ENUMERATION">
                <a:a name="IMPLEMENTATIONCONFIGCLASS"
                     type="IMPLEMENTATIONCONFIGCLASS">
                  <icc:v class="PreCompile">VariantPostBuildLoadable</icc:v>
                  <icc:v class="PreCompile">VariantPostBuildSelectable</icc:v>
                </a:a>
                <a:a name="LABEL" value="Config Variant"/>
                <a:da name="DEFAULT" value="VariantPostBuildSelectable"/>
                <a:da name="RANGE">
                  <a:v>VariantPostBuildLoadable</a:v>
                  <a:v>VariantPostBuildSelectable</a:v>
                </a:da>
                <a:da name="EDITABLE" value="true"/>
              </v:var>
              <v:lst name="DioConfig" type="MULTIPLE-CONFIGURATION-CONTAINER">
                <a:da name="MIN" value="1"/>
                 <v:ctr name="DioConfig" type="MULTIPLE-CONFIGURATION-CONTAINER">
                  <a:a name="DESC" value="EN: This container is the base of a multiple configuration set"/>
                  <a:a name="UUID" value="f909787d-7023-480a-969b-52372a817d7d"/>
                  <v:lst name="DioPort" type="MAP">
                   <a:da name="MAX" type="XPath" expr="ecu:get('Dio.DioPortMax')"/>
                   <a:da name="MIN" type="XPath" expr="ecu:get('Dio.DioPortMin')"/>
                   <v:ctr name="DioPort" type="IDENTIFIABLE">
                     <a:a name="NAME_PATTERN" value="DioPort_?"/>
                     <a:a name="DESC">
                       <a:v>
  Configuration of individual DIO ports, consisting of channels and possible channel groups.
  Note:
  This container definition does not explicitly define a symbolic name parameter.
  Instead, the container&apos;s short name will be used in the Ecu Configuration Description to specify
  the symbolic name of the port. This symbolic name is #defined in the code. Hence the container&apos;s
  short name must be unique and should not clash with other symbolic names and published symbolic names.
  Also they must comply with C standard.

  Refer to AUTOSAR_SWS_DIO_Driver.pdf for an example on the configuration of the DIO module
                       </a:v>
                     </a:a>
                     <a:a name="UUID" value="2c735a8f-cfa6-4cbb-ab8e-04f75bd99074"/>
                     <v:var name="DioPortId" type="INTEGER">
                       <a:da name="TOOLTIP" value="Numeric identifier of the DIO port"/>
                       <a:a name="DESC">
                         <a:v>
  Numeric identifier of the DIO port.

  Notes:
  1. This numeric value should correspond to the port number. E.g.: Port0 should be numbered 0, Port1 as 1, ... , Port40 as 40.
  2. This value will be assigned to the DIO port symbolic name (i.e. the SHORT-NAME of the container DioPort).
  3. Not all MCU ports may be used for DIO, thus there may be &quot;gaps&quot; in the list of all IDs.
                         </a:v>
                       </a:a>
                       <a:a name="IMPLEMENTATIONCONFIGCLASS"
                              type="IMPLEMENTATIONCONFIGCLASS">
                           <icc:v class="PostBuild">VariantPostBuildLoadable</icc:v>
                           <icc:v class="PostBuild">VariantPostBuildSelectable</icc:v>
                       </a:a>
                       <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                       <a:a name="SYMBOLICNAMEVALUE" value="true"/>
                       <a:a name="UUID"
                            value="a1f0fcbe-e2c5-4891-9a2e-fef4dd467d61"/>
                       <a:da name="DEFAULT" type="XPath" expr="node:fallback(node:current()/../@index,'0')"/>
                       <a:da name="INVALID" type="Multi">
                       <mt:xpath expr="not(ecu:has(concat('Dio.DioChannels_Port',node:current()/../DioPortId)))" true=" PortId entered does not exist"/>
                       <mt:range>
                         <mt:tst expr="&gt;=0"/>
                         <mt:tst expr="&lt;=ecu:get('Dio.MaxAvailablePort')"/>
                       </mt:range>
                       </a:da>
                     </v:var>
                     <v:lst name="DioChannel" type="MAP">
                       <a:da name="MIN" value="0"/>
                       <a:da name="MAX" value="16"/>
                       <a:da name="INVALID" type="XPath">
                         <a:tst expr="(ecu:has(concat('Dio.DioChannels_Port',node:current()/../DioPortId))) and
                                      ((num:i(count(../DioChannel/*))) >
                                        num:i( count( text:split(ecu:get(concat('Dio.DioChannels_Port',node:current()/../DioPortId))) ) ))"
                                        true="Number of DIO channels is out of range."/>
                       </a:da>
                       <v:ctr name="DioChannel" type="IDENTIFIABLE">
                         <a:a name="NAME_PATTERN" value="DioChannel_?"/>
                         <a:a name="DESC">
                           <a:v>
  Container for configuration of an individual DIO channel.
  Note:
  Besides a HW specific channel name which is typically fixed for a specific micro controller, additional
  symbolic names can be defined per channel. This container definition does not explicitly define a symbolic
  name parameter. Instead, the container&apos;s short name will be used in the Ecu Configuration Description
  to specify the symbolic name of the channel.
  This symbolic name is #defined in the code. Hence the container&apos;s short name must be unique and should
  not clash with other symbolic names and published symbolic names. Also they must comply with C standard.
                            </a:v>
                         </a:a>
                         <a:a name="UUID"
                              value="31ecfd3d-4759-4887-ac6c-895c18c7f4b9"/>
                         <v:var name="DioChannelId" type="INTEGER">
                           <a:da name="TOOLTIP" value="Numeric identifier of the DIO channel"/>
                           <a:a name="DESC">
                             <a:v>
  Numeric identifier of the DIO channel.

  Notes:
  1. This numeric value should correspond to the pin number within the port
  2. This value will be assigned to the DIO channel symbolic name (i.e. the SHORT-NAME of the container DioChannel).
                             </a:v>
                           </a:a>
                           <a:a name="IMPLEMENTATIONCONFIGCLASS"
                                  type="IMPLEMENTATIONCONFIGCLASS">
                               <icc:v class="PostBuild">VariantPostBuildLoadable</icc:v>
                               <icc:v class="PostBuild">VariantPostBuildSelectable</icc:v>
                           </a:a>
                           <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                           <a:a name="SYMBOLICNAMEVALUE" value="true"/>
                           <a:a name="UUID"
                                value="356eb492-2724-44ce-8c84-b92625d4ac5f"/>
                           <a:da name="DEFAULT" type="XPath" expr="node:fallback(node:current()/../@index,'0')"/>
                           <a:da name="INVALID" type="Multi">
                             <mt:xpath expr="not(contains( ecu:get(concat('Dio.DioChannels_Port',node:current()/../../../DioPortId)), concat('_', . , '_' )))"
                                  true="Invalid DioChannelId"/>
                             <mt:range>
                               <mt:tst expr="&gt;=0"/>
                               <mt:tst expr="&lt;=15"/>
                             </mt:range>
                           </a:da>
                         </v:var>
                       </v:ctr>
                     </v:lst>
                     <v:lst name="DioChannelGroup" type="MAP">
                       <v:ctr name="DioChannelGroup" type="IDENTIFIABLE">
                         <a:a name="NAME_PATTERN" value="DioChannelGroup_?"/>
                         <a:a name="DESC">
                           <a:v>
  Container for configuration of DIO channel groups.

  A channel group represents several adjoining DIO channels represented by a logical group.
  A DIO channel group shall belong to only one DIO port.
  To specify a DIO channel group, the mask and the offset values are to be defined by the user.
  There can be as many groups as required by the user.
                           </a:v>
                         </a:a>
                         <a:a name="UUID"
                              value="8dea84eb-3a46-472b-971a-2474076843a3"/>
                         <v:var name="DioChannelGroupIdentification" type="STRING">
                           <a:da name="TOOLTIP" value="Identifier of the DIO channel group"/>
                           <a:a name="DESC">
                             <a:v>
  Identifier of the DIO channel group.

  The DIO channel group configuration is stored as a data sturcture of type Dio_ChannelGroupType. A DIO channel
  group is identified in the APIs of the DIO driver by a pointer to this configuration data structure.
  The string in this parameter will be used as the symbolic name for identifying the Dio Channel group. This
  symbolic name is #defined in the code with the pointer to the configuration data structure assigned to it. Hence
  this symbolic name must be unique and should not clash with other symbolic names and published symbolic names.
  Also they must comply with C standard.
  While calling the API to operate on this Dio channel group, this identifier is to be inserted in the API call
  of the calling module to get the address of the variable in memory which holds the channel group information.
                             </a:v>
                           </a:a>
                           <a:a name="IMPLEMENTATIONCONFIGCLASS"
                                  type="IMPLEMENTATIONCONFIGCLASS">
                               <icc:v class="PreCompile">VariantPostBuildLoadable</icc:v>
                               <icc:v class="PreCompile">VariantPostBuildSelectable</icc:v>
                           </a:a>
                           <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                           <a:a name="SYMBOLICNAMEVALUE" value="true"/>
                           <a:a name="UUID" value="0414ed73-8f70-412a-98cb-a0a85fea383a"/>
                           <a:da name="DEFAULT" type="XPath" expr="concat('DioChGrpId_P', node:fallback(node:current()/../../../DioPortId,'0'), '_', node:fallback(node:current()/../@index,'0'))"/>
                         </v:var>
                         <v:var name="DioPortMask" type="INTEGER">
                           <a:da name="TOOLTIP" value="Configuration of the mask value for identifying the channel group within a Port"/>
                           <a:a name="DESC">
                             <a:v>
  Configuration of the mask value for identifying the channel group within a Port.

  This parameter shall be the mask which defines the positions of the channelgroup. The data type depends on the port width.

  For e.g., consider an 8-bit port whose channels 4:1 form the channel group. In this case the mask value must be 0x1E.
                             </a:v>
                           </a:a>
                           <a:a name="IMPLEMENTATIONCONFIGCLASS"
                                  type="IMPLEMENTATIONCONFIGCLASS">
                               <icc:v class="PostBuild">VariantPostBuildLoadable</icc:v>
                               <icc:v class="PostBuild">VariantPostBuildSelectable</icc:v>
                           </a:a>
                           <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                           <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                           <a:da name="DEFAULT" value="0"/>
                           <a:a name="UUID" value="9b8e2987-69df-4a03-837f-d6603db07caa"/>
                           <a:da name="INVALID" type="Multi">
                             <mt:xpath expr="(ecu:has(concat('Dio.DioChannels_Port',node:current()/../../../DioPortId))) and
                                boolean( bit:and( (.) , (bit:not(num:hextoint(ecu:get(concat('Dio.DioPortMask_Port',node:current()/../../../DioPortId))))) ) )"
                                true="Invalid DioPortMask"/>
                             <mt:range>
                               <mt:tst expr="&gt;=0"/>
                               <mt:tst expr="&lt;=65535"/>
                             </mt:range>
                           </a:da>
                         </v:var>
                         <v:var name="DioPortOffset" type="INTEGER">
                           <a:da name="DEFAULT" value="0"/>
                           <a:a name="CALCULATION-FORMULA"
                                value="position of the first bit of dioportmask which is set to &apos;1&apos; counted from lsb"/>
                           <a:a name="DERIVED" value="TRUE"/>
                           <a:da name="TOOLTIP" value="The position of the Channel Group on the port, counted from the LSB"/>
                           <a:a name="DESC">
                             <a:v>
  The position of the Channel Group on the port, counted from the LSB.

  calculationFormula = Position of the first bit of DioPortMask which is set to &apos;1&apos; counted from LSB

  The user need not edit the value of this parameter, since its value is derived from the value of DioPortMask
  by the code generator.
                             </a:v>
                           </a:a>
                           <a:a name="IMPLEMENTATIONCONFIGCLASS"
                                  type="IMPLEMENTATIONCONFIGCLASS">
                               <icc:v class="PostBuild">VariantPostBuildLoadable</icc:v>
                               <icc:v class="PostBuild">VariantPostBuildSelectable</icc:v>
                           </a:a>
                           <a:da name="EDITABLE" value="false"/>
                           <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                           <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                           <a:a name="UUID"
                                value="7303bb6c-6f70-4041-93a3-dd5ee33f6395"/>
                           <a:da name="INVALID" type="Range">
                              <a:tst expr="&lt;=31"/>
                              <a:tst expr="&gt;=0"/>
                           </a:da>
                         </v:var>
                       </v:ctr>
                     </v:lst>
                   </v:ctr>
                  </v:lst>
                 </v:ctr>
              </v:lst>
              <v:ctr name="DioGeneral" type="IDENTIFIABLE">
                <a:a name="DESC"
                     value="EN: General DIO module configuration parameters."/>
                <a:a name="UUID" value="65db3663-62df-466c-87b1-186e6428e2c9"/>
                <v:var name="DioDevErrorDetect" type="BOOLEAN">
                  <a:da name="TOOLTIP" value="Pre-processor switch to enable/disable the Development Error Detection and Notification"/>
                  <a:a name="DESC">
                    <a:v>
           Pre-processor switch to enable/disable the Development Error Detection and Notification
           - ON : Development Error Detection and notification is enabled
           - OFF: Development Error Detection and notification is disabled
                    </a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS"
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPostBuildLoadable</icc:v>
                    <icc:v class="PreCompile">VariantPostBuildSelectable</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="9442341a-9c2e-4606-a9a6-5a2e4225dc19"/>
                  <a:da name="DEFAULT" value="false"/>
                </v:var>
                <v:var name="DioFlipChannelApi" type="BOOLEAN">
                  <a:da name="TOOLTIP" value="Pre-processor switch to add / remove the service Dio_FlipChannel() from the code"/>
                  <a:a name="DESC">
                    <a:v>
           Pre-processor switch to add / remove the service Dio_FlipChannel() from the code
           - ON : The API Dio_FlipChannel() is available in the code
           - OFF: The API Dio_FlipChannel() is not available in the code
                    </a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS"
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPostBuildLoadable</icc:v>
                    <icc:v class="PreCompile">VariantPostBuildSelectable</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="bde3973f-c106-4b7f-901c-6f15b3a8b70a"/>
                  <a:da name="DEFAULT" value="false"/>
                </v:var>
                <v:var name="DioPBFixedAddress" type="BOOLEAN">
                  <a:da name="TOOLTIP" value="Pre-processor switch to enable / disable the Loadable fixed address feature."/>
                  <a:a name="DESC">
                    <a:v>EN: Pre-processor switch to enable / disable the Loadable fixed address feature.
                              true: Loadable fixed address feature is enabled. The multiplicity of the DioConfigSet is 1..1.
                              false: Loadable fixed address feature is disabled. The multiplicity of the DioConfigSet is 1..*.</a:v>
                    </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS"
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPostBuildLoadable</icc:v>
                    <icc:v class="PreCompile">VariantPostBuildSelectable</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="INFINEON_AURIX"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="65d6a210-aa46-4767-af55-83137644ef96"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="INVALID" type="XPath">
                    <a:tst expr="(num:i(count(../../DioConfig/*))) > 1 and . = 'true'"
                     true="Wrong Configuration. When DioPBFixedAddress is enabled then only 1 Config set is permitted. Remove the other Config sets."/>
                  </a:da>
                </v:var>
                <v:var name="DioVersionInfoApi" type="BOOLEAN">
                  <a:da name="TOOLTIP" value="Pre-processor switch to add / remove the service Dio_GetVersionInfo() from the code"/>
                  <a:a name="DESC">
                    <a:v>
                       Pre-processor switch to add / remove the service Dio_GetVersionInfo() from the code
                     - ON : The API Dio_GetVersionInfo() is available in the code
                     - OFF: The API Dio_GetVersionInfo() is not available in the code
                    </a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS"
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPostBuildLoadable</icc:v>
                    <icc:v class="PreCompile">VariantPostBuildSelectable</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="bde3973f-c106-4b7f-901c-6f15b3a8b70b"/>
                  <a:da name="DEFAULT" value="false"/>
                </v:var>
                <v:var name="DioRunningInUser0Mode" type="BOOLEAN">
                  <a:a name="DESC"
                       value="If this parameter is set to FALSE, then Protected Mode(user mode) register access will not be done and API is run in Supervisor mode."/>
                  <a:a name="TOOLTIP"
                       value="EN: Pre-processor switch to enable/disable the Normal/Protected mode."/>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS"
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPostBuildLoadable</icc:v>
                    <icc:v class="PreCompile">VariantPostBuildSelectable</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="INFINEON_AURIX"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="bde3973f-c106-4b0f-901c-6f15b3cff715"/>
                  <a:da name="DEFAULT" value="false"/>
                </v:var>
                <v:var name="DioUserModeInitApiEnable" type="BOOLEAN">
                  <a:a name="DESC"
                       value="Pre-processor switch to enable / disable protected register access in all the Init API."/>
                  <a:a name="TOOLTIP"
                       value="EN: Pre-processor switch to enable / disable protected register access in all the Init API."/>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS"
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPostBuildLoadable</icc:v>
                    <icc:v class="PreCompile">VariantPostBuildSelectable</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="INFINEON_AURIX"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="bde3973f-c106-4b9f-901c-6f15b3cff715"/>
                  <a:da name="DEFAULT" value="false"/>
                </v:var>
                <v:var name="DioUserModeRuntimeApiEnable" type="BOOLEAN">
                  <a:a name="DESC"
                       value="Pre-processor switch to enable / disable protected register access in all the APIs other than Init/Deinit APIs"/>
                  <a:a name="TOOLTIP"
                       value="EN: Pre-processor switch to enable / disable protected register access in all the APIs other than Init/Deinit APIs."/>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS"
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPostBuildLoadable</icc:v>
                    <icc:v class="PreCompile">VariantPostBuildSelectable</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="INFINEON_AURIX"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="bde3973f-c106-4b7f-902c-6f15b3cff715"/>
                  <a:da name="DEFAULT" value="false"/>
                </v:var>
              </v:ctr>
              <v:ctr name="DioSafety" type="IDENTIFIABLE">
                <a:a name="DESC"
                     value="EN: This container contains the configuration for the safety features of the DIO driver."/>
                <a:a name="UUID" value="54b6c231-c092-4390-93b2-8b2bd7168784"/>
                <v:var name="DioSafetyEnable" type="BOOLEAN">
                  <a:a name="UUID" value="bde3973f-c106-4b7f-901c-6f15b3a8b715"/>
                  <a:a name="ORIGIN" value="INFINEON_AURIX"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="TOOLTIP" value="Pre-processor switch to enable/disable Safety feaure provided by DIO"/>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS"
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPostBuildLoadable</icc:v>
                    <icc:v class="PreCompile">VariantPostBuildSelectable</icc:v>
                  </a:a>
                  <a:a name="DESC"
                       value="EN: Pre-processor switch for enabling/disabling the DIO driver safety features. By default,
                       - Range check on API parameters shall be done
                       - DIO configuration structure shall have a unique marker field which will be verified by the driver
                       - Publish the safety usage of DIO driver for user to set the respective MPU settings"/>
                </v:var>
                <v:var name="DioInitCheckApi" type="BOOLEAN">
                  <a:a name="DESC"
                       value="If this parameter is set to TRUE, the DIO initialization check will be done as a safety measure.  If this parameter is set to FALSE, the DIO driver shall not verify the initialization."/>
                  <a:a name="TOOLTIP"
                       value="EN: Pre-processor switch to enable/disable the API Dio_InitCheck."/>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS"
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPostBuildLoadable</icc:v>
                    <icc:v class="PreCompile">VariantPostBuildSelectable</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="INFINEON_AURIX"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="bde3973f-c106-4b7f-901c-6f15b3cff715"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="EDITABLE" type="XPath" expr="../DioSafetyEnable='true'"/>
                </v:var>
              </v:ctr>
              <v:ctr name="CommonPublishedInformation" type="IDENTIFIABLE">
                <a:a name="DESC" value="EN: Common container, aggregated by all modules. It contains published information about vendor and versions."/>
                <a:a name="UUID" value="492f8482-3e2c-4bf1-b27f-01fd7ac35788"/>
                <v:var name="ArMajorVersion" type="INTEGER">
                  <a:a name="DESC" value="EN: Major version number of AUTOSAR specification on which the appropriate implementation is based on."/>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS"
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PublishedInformation">VariantPostBuildLoadable</icc:v>
                    <icc:v class="PublishedInformation">VariantPostBuildSelectable</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="INFINEON_AURIX"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="bd0a8d38-4d8c-4ee9-88fe-1166b258bb8a"/>
                  <a:da name="INVALID" type="Range">
                    <a:tst expr="&lt;=65535"/>
                    <a:tst expr="&gt;=0"/>
                  </a:da>
                  <a:da name="DEFAULT" value="2"/>
                </v:var>
                <v:var name="ArMinorVersion" type="INTEGER">
                  <a:a name="DESC" value="EN: Minor version number of AUTOSAR specification on which the appropriate implementation is based on."/>
                  <a:a name="ORIGIN" value="INFINEON_AURIX"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="73f87c7f-e230-4178-bff0-eb2704aae656"/>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS"
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PublishedInformation">VariantPostBuildLoadable</icc:v>
                    <icc:v class="PublishedInformation">VariantPostBuildSelectable</icc:v>
                  </a:a>
                  <a:da name="INVALID" type="Range">
                    <a:tst expr="&lt;=65535"/>
                    <a:tst expr="&gt;=0"/>
                  </a:da>
                  <a:da name="DEFAULT" value="5"/>
                </v:var>
                <v:var name="ArPatchVersion" type="INTEGER">
                  <a:a name="DESC" value="EN: Patch level version number of AUTOSAR specification on which the appropriate implementation is based on."/>
                  <a:a name="ORIGIN" value="INFINEON_AURIX"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="2380135d-6778-417a-a34b-e10017d4dd54"/>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS"
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PublishedInformation">VariantPostBuildLoadable</icc:v>
                    <icc:v class="PublishedInformation">VariantPostBuildSelectable</icc:v>
                  </a:a>
                  <a:da name="INVALID" type="Range">
                    <a:tst expr="&lt;=65535"/>
                    <a:tst expr="&gt;=0"/>
                  </a:da>
                  <a:da name="DEFAULT" value="0"/>
                </v:var>
                <v:var name="SwMajorVersion" type="INTEGER">
                  <a:a name="DESC" value="EN: Major version number of the vendor specific implementation of the module. The numbering is vendor specific."/>
                  <a:a name="ORIGIN" value="INFINEON_AURIX"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="fca015e3-5f28-4cbe-8949-8f4b87d86827"/>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS"
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PublishedInformation">VariantPostBuildLoadable</icc:v>
                    <icc:v class="PublishedInformation">VariantPostBuildSelectable</icc:v>
                  </a:a>
                  <a:da name="INVALID" type="Range">
                    <a:tst expr="&lt;=65535"/>
                    <a:tst expr="&gt;=0"/>
                  </a:da>
                  <a:da name="DEFAULT" value="3"/>
                </v:var>
                <v:var name="SwMinorVersion" type="INTEGER">
                  <a:a name="DESC" value="EN: Minor version number of the vendor specific implementation of the module. The numbering is vendor specific."/>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS"
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PublishedInformation">VariantPostBuildLoadable</icc:v>
                    <icc:v class="PublishedInformation">VariantPostBuildSelectable</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="INFINEON_AURIX"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="14ab81e0-3d80-43dc-8b92-247e5a542df9"/>
                  <a:da name="INVALID" type="Range">
                    <a:tst expr="&lt;=65535"/>
                    <a:tst expr="&gt;=0"/>
                  </a:da>
                  <a:da name="DEFAULT" value="1"/>
                </v:var>
                <v:var name="SwPatchVersion" type="INTEGER">
                  <a:a name="DESC" value="EN: Patch level version number of the vendor specific implementation of the module. The numbering is vendor specific."/>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS"
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PublishedInformation">VariantPostBuildLoadable</icc:v>
                    <icc:v class="PublishedInformation">VariantPostBuildSelectable</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="INFINEON_AURIX"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="32e37bfd-18b6-41d1-9248-a81dbe0fe4c5"/>
                  <a:da name="INVALID" type="Range">
                    <a:tst expr="&lt;=65535"/>
                    <a:tst expr="&gt;=0"/>
                  </a:da>
                  <a:da name="DEFAULT" value="0"/>
                </v:var>
                <v:var name="ModuleId" type="INTEGER">
                  <a:a name="DESC" value="EN: Module ID of this module from Module List"/>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS"
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PublishedInformation">VariantPostBuildLoadable</icc:v>
                    <icc:v class="PublishedInformation">VariantPostBuildSelectable</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="INFINEON_AURIX"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="3b407478-6902-4f80-b7cf-f33b0854e638"/>
                  <a:da name="INVALID" type="Range">
                    <a:tst expr="&lt;=65535"/>
                    <a:tst expr="&gt;=0"/>
                  </a:da>
                  <a:da name="DEFAULT" value="120"/>
                </v:var>
                <v:var name="VendorId" type="INTEGER">
                  <a:a name="DESC" value="EN: Vendor ID of the dedicated implementation of this module according to the AUTOSAR vendor list"/>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS"
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PublishedInformation">VariantPostBuildLoadable</icc:v>
                    <icc:v class="PublishedInformation">VariantPostBuildSelectable</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="INFINEON_AURIX"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="7d650b2d-4adb-41f0-a68e-5f0c416501d1"/>
                  <a:da name="INVALID" type="Range">
                    <a:tst expr="&lt;=65535"/>
                    <a:tst expr="&gt;=0"/>
                  </a:da>
                  <a:da name="DEFAULT" value="17"/>
                </v:var>
                <v:var name="Release" type="STRING">
                  <a:a name="DESC" value="EN: Aurix derivative used for thr implementation"/>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS"
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PublishedInformation">VariantPostBuildLoadable</icc:v>
                    <icc:v class="PublishedInformation">VariantPostBuildSelectable</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="INFINEON_AURIX"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="3b407478-6902-4f40-b7cf-f33b0854e638"/>
                  <a:da name="DEFAULT" type="XPath" expr="ecu:get('Rel.Derivate')"/>
                </v:var>
                <v:var name="VendorApiInfix" type="STRING">
                  <a:a name="DESC">
                    <a:v>EN: In driver modules which can be instantiated several times on a single ECU, BSW00347 requires that the name of APIs is extended by the VendorId and a vendor specific name.
              This parameter is used to specify the vendor specific name. In total, the implementation specific name is generated as follows:
              &lt;ModuleName&gt;_&gt;VendorId&gt;_&lt;VendorApiInfix&gt;&lt;Api name from SWS&gt;.

              E.g.  assuming that the VendorId of the implementor is 123 and the implementer chose a VendorApiInfix of &quot;v11r456&quot; a api name Can_Write defined in the SWS will translate to Can_123_v11r456Write.

              This parameter is mandatory for all modules with upper multiplicity &gt; 1. It shall not be used for modules with upper multiplicity =1.</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS"
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PublishedInformation">VariantPostBuildLoadable</icc:v>
                    <icc:v class="PublishedInformation">VariantPostBuildSelectable</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="INFINEON_AURIX"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="ad363b41-e945-4717-b12f-c2f800ef138e"/>
                  <a:da name="ENABLE" value="false"/>
                  <a:da name="DEFAULT" value=""/>
                </v:var>
              </v:ctr>
            </v:ctr>
          </d:chc>
        </d:lst>
      </d:ctr>
    </d:lst>
  </d:ctr>
</datamodel>
